[{"C:\\motw\\client\\src\\index.js":"1","C:\\motw\\client\\src\\App.js":"2","C:\\motw\\client\\src\\reportWebVitals.js":"3","C:\\motw\\client\\src\\components\\SuggestionForm.js":"4","C:\\motw\\client\\src\\components\\PreviousMovie.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":2800,"mtime":1609993199115,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":3397,"mtime":1609992418427,"results":"10","hashOfConfig":"7"},{"size":2924,"mtime":1609031098964,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1a9bwqo",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\motw\\client\\src\\index.js",[],["25","26"],"C:\\motw\\client\\src\\App.js",["27"],"C:\\motw\\client\\src\\reportWebVitals.js",[],"C:\\motw\\client\\src\\components\\SuggestionForm.js",["28"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport '../css/SuggestionForm.css';\r\n\r\nclass SuggestionForm extends React.Component {\r\n    state = {\r\n        movieSuggestion: '', \r\n        user: '', \r\n        movieNote: '' \r\n    };\r\n\r\n    submitSuggestion = () => {\r\n        if (this.state.movieSuggestion.length === 0) {\r\n            window.alert(\"Movie name cannot be empty.\");\r\n            return;\r\n        }\r\n\r\n        if (this.state.user.length === 0) {\r\n            window.alert(\"User not selected.\");\r\n            return;\r\n        }\r\n\r\n        const movie = this.state.movieSuggestion;\r\n        const user = this.state.user;\r\n\r\n        const url = process.env.REACT_ENV === \"production\" ? process.env.REACT_HOME_URL + \"/SuggestMovie\" : \"http://localhost:9000/SuggestMovie\";\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: {\r\n                movie: movie, \r\n                name: user,\r\n                movieNote: this.state.movieNote\r\n            }\r\n        })\r\n        .then((response) => {\r\n        if (response.data.success) {\r\n            this.setState({movieSuggestion:'', movieNote:''});\r\n            window.alert(\"Successfully added \" + response.data.val + \".\\n\" + \"Movie ID: \" + response.data.ticketNum);\r\n        } else {\r\n            // error occured\r\n            window.alert(response.data.val);\r\n        }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    updateMovie = (event) => {\r\n        this.setState({movieSuggestion: event.target.value})\r\n    } \r\n\r\n    updateUser = (event) => {\r\n        this.setState({user: event.target.value});\r\n    }\r\n\r\n    updateNote = (event) => {\r\n        this.setState({movieNote: event.target.value});\r\n    }\r\n\r\n    showReviewForm = () => {\r\n        window.alert(\"clicked\");\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1> Suggest a Movie </h1>\r\n\r\n                <label> Title: </label>\r\n                <input value={this.state.movieSuggestion} onChange={this.updateMovie} />\r\n                <br/>\r\n\r\n                <label> Suggested By: </label>\r\n                <select name=\"Name\" defaultValue=\"Choose here\" onChange={this.updateUser}>\r\n                <option value=\"Choose here\" disabled hidden>Choose here</option>\r\n                <option value={process.env.REACT_APP_NAME_1}>{process.env.REACT_APP_NAME_1}</option>\r\n                <option value={process.env.REACT_APP_NAME_2}>{process.env.REACT_APP_NAME_2}</option>\r\n                <option value={process.env.REACT_APP_NAME_3}>{process.env.REACT_APP_NAME_3}</option>\r\n                <option value={process.env.REACT_APP_NAME_4}>{process.env.REACT_APP_NAME_4}</option>\r\n                <option value={process.env.REACT_APP_NAME_5}>{process.env.REACT_APP_NAME_5}</option>\r\n                <option value={process.env.REACT_APP_NAME_6}>{process.env.REACT_APP_NAME_6}</option>\r\n                <option value={process.env.REACT_APP_NAME_7}>{process.env.REACT_APP_NAME_7}</option>\r\n                </select>\r\n                <br/>\r\n\r\n                <label> Teaser Note (optional): </label>\r\n                <textarea value={this.state.movieNote} onChange={this.updateNote} />\r\n                <br/>\r\n\r\n                <button onClick={this.submitSuggestion}> Suggest </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SuggestionForm;","C:\\motw\\client\\src\\components\\PreviousMovie.js",[],["29","30"],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":58,"column":28,"nodeType":"37","endLine":58,"endColumn":40},{"ruleId":"38","severity":1,"message":"39","line":39,"column":76,"nodeType":"40","messageId":"41","endLine":39,"endColumn":77},{"ruleId":"31","replacedBy":"42"},{"ruleId":"33","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["44"],["45"],"no-global-assign","no-unsafe-negation"]