[{"C:\\motw\\client\\src\\index.js":"1","C:\\motw\\client\\src\\App.js":"2","C:\\motw\\client\\src\\reportWebVitals.js":"3","C:\\motw\\client\\src\\components\\SuggestionForm.js":"4","C:\\motw\\client\\src\\components\\PreviousMovie.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":2929,"mtime":1610183874819,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":3309,"mtime":1610062042170,"results":"10","hashOfConfig":"7"},{"size":2924,"mtime":1609031098964,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1a9bwqo",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\motw\\client\\src\\index.js",[],["25","26"],"C:\\motw\\client\\src\\App.js",["27"],"import React from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport SuggestionForm from './components/SuggestionForm';\r\nimport PreviousMovie from './components/PreviousMovie';\r\nrequire('dotenv').config()\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    isMovieSelected: false,\r\n    movieOTW: '',\r\n    userOTW: '', \r\n    noteOTW: '',\r\n    previousMovies: [],\r\n    currentPool: [],\r\n    isLoading: true\r\n  }\r\n  \r\n  componentDidMount () {\r\n    // retrieve watched movies\r\n    const url = \"http://localhost:9000/HomeData\";\r\n    axios({\r\n      method: 'get', \r\n      url: url\r\n    })\r\n\r\n    .then((response) => {\r\n      // get motw data\r\n      let movieOTWData = response.data.movieOTW;\r\n      let movieOTW = movieOTWData.movieOTW;\r\n      let userOTW = movieOTWData.addedBy;\r\n      let teaser = movieOTWData.note;\r\n\r\n      // display motw if it's not blank\r\n      let isMovieSelected = (movieOTWData.movieOTW.length === 0) ? false : true;\r\n      \r\n      let movies = response.data.movies;\r\n      this.setState({previousMovies: movies, isLoading: false, isMovieSelected: isMovieSelected, movieOTW: movieOTW, userOTW: userOTW, noteOTW: teaser, currentPool: response.data.currentPool});\r\n    })\r\n    .catch((error) => {\r\n      window.alert(\"Unable to load previous movies: \" + error);\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return <h1 style={{textAlign: 'center'}}> Loading... </h1>\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1> Movie Of The Week (v1.1.0)</h1>\r\n        {this.state.isMovieSelected ? \r\n            <div> \r\n              <p> Movie of the week is: {this.state.movieOTW} </p>\r\n              <p> Added by: {this.state.userOTW} </p>\r\n              {this.state.noteOTW.length === 0 ? null : <p> Teaser: {this.state.noteOTW} </p>}\r\n              <p> Watch it <a href=\"#\">Here</a></p> \r\n            </div> \r\n            : \r\n            <p> No movie selected yet for this week.</p>\r\n        }\r\n\r\n        <h1> Current Pool </h1>\r\n        {this.state.currentPool.map((user, i) => (\r\n          <p key={i}> {user.name} - {user.suggestion} </p>\r\n        ))}\r\n\r\n        <SuggestionForm />\r\n\r\n        <h1> Movies Watched so Far </h1>\r\n        {this.state.previousMovies.map((movie, i) => (\r\n          <PreviousMovie key={i} movieTitle={movie.name} teaser={movie.teaser} addedBy={movie.addedBy} dateWatched={movie.dateWatched} />\r\n        ))}\r\n\r\n        <p> Features/Improvements to be added soon: </p>\r\n        <ul> \r\n          <li> Change order of/delete your suggested movies </li>\r\n          <li> Review movies previously watched </li>\r\n          <li> Show a movie leaderboard filtered by highest score first </li>\r\n          <li> Redesign UI </li>\r\n          <li> Make UI friendly for all screen sizes </li>\r\n        </ul>\r\n        <p> Let me know of features or improvements you'd like to be added</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\motw\\client\\src\\reportWebVitals.js",[],"C:\\motw\\client\\src\\components\\SuggestionForm.js",["28"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport '../css/SuggestionForm.css';\r\n\r\nclass SuggestionForm extends React.Component {\r\n    state = {\r\n        movieSuggestion: '', \r\n        user: '', \r\n        movieNote: '' \r\n    };\r\n\r\n    submitSuggestion = () => {\r\n        if (this.state.movieSuggestion.length === 0) {\r\n            window.alert(\"Movie name cannot be empty.\");\r\n            return;\r\n        }\r\n\r\n        if (this.state.user.length === 0) {\r\n            window.alert(\"User not selected.\");\r\n            return;\r\n        }\r\n\r\n        const movie = this.state.movieSuggestion;\r\n        const user = this.state.user;\r\n\r\n        const url = \"http://localhost:9000/SuggestMovie\";\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: {\r\n                movie: movie, \r\n                name: user,\r\n                movieNote: this.state.movieNote\r\n            }\r\n        })\r\n        .then((response) => {\r\n        if (response.data.success) {\r\n            this.setState({movieSuggestion:'', movieNote:''});\r\n            window.alert(\"Successfully added \" + response.data.val + \".\\n\" + \"Movie ID: \" + response.data.ticketNum);\r\n        } else {\r\n            // error occured\r\n            window.alert(response.data.val);\r\n        }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    updateMovie = (event) => {\r\n        this.setState({movieSuggestion: event.target.value})\r\n    } \r\n\r\n    updateUser = (event) => {\r\n        this.setState({user: event.target.value});\r\n    }\r\n\r\n    updateNote = (event) => {\r\n        this.setState({movieNote: event.target.value});\r\n    }\r\n\r\n    showReviewForm = () => {\r\n        window.alert(\"clicked\");\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1> Suggest a Movie </h1>\r\n\r\n                <label> Title: </label>\r\n                <input value={this.state.movieSuggestion} onChange={this.updateMovie} />\r\n                <br/>\r\n\r\n                <label> Suggested By: </label>\r\n                <select name=\"Name\" defaultValue=\"Choose here\" onChange={this.updateUser}>\r\n                <option value=\"Choose here\" disabled hidden>Choose here</option>\r\n                <option value={process.env.REACT_APP_NAME_1}>{process.env.REACT_APP_NAME_1}</option>\r\n                <option value={process.env.REACT_APP_NAME_2}>{process.env.REACT_APP_NAME_2}</option>\r\n                <option value={process.env.REACT_APP_NAME_3}>{process.env.REACT_APP_NAME_3}</option>\r\n                <option value={process.env.REACT_APP_NAME_4}>{process.env.REACT_APP_NAME_4}</option>\r\n                <option value={process.env.REACT_APP_NAME_5}>{process.env.REACT_APP_NAME_5}</option>\r\n                <option value={process.env.REACT_APP_NAME_6}>{process.env.REACT_APP_NAME_6}</option>\r\n                <option value={process.env.REACT_APP_NAME_7}>{process.env.REACT_APP_NAME_7}</option>\r\n                </select>\r\n                <br/>\r\n\r\n                <label> Teaser Note (optional): </label>\r\n                <textarea value={this.state.movieNote} onChange={this.updateNote} />\r\n                <br/>\r\n\r\n                <button onClick={this.submitSuggestion}> Suggest </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SuggestionForm;","C:\\motw\\client\\src\\components\\PreviousMovie.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":59,"column":28,"nodeType":"35","endLine":59,"endColumn":40},{"ruleId":"36","severity":1,"message":"37","line":39,"column":76,"nodeType":"38","messageId":"39","endLine":39,"endColumn":77},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]