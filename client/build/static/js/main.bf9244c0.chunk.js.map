{"version":3,"sources":["components/SuggestionForm.js","components/PreviousMovie.js","components/CustomNavbar.js","Home.js","pages/Login.js","App.js","reportWebVitals.js","index.js"],"names":["SuggestionForm","state","movieSuggestion","user","movieNote","submitSuggestion","length","movie","axios","method","url","data","name","then","response","success","setState","window","alert","val","movieIdx","catch","error","console","log","updateMovie","event","target","value","updateUser","updateNote","showReviewForm","this","onChange","defaultValue","disabled","hidden","process","onClick","React","Component","PreviousMovie","displayReviewForm","reviewSubmitted","reviewScoreInput","finalReviewScore","cancelReview","updateReviewScore","reviewScore","submitReview","parseFloat","className","props","movieTitle","addedBy","dateWatched","teaser","CustomNavbar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","Form","inline","to","Button","color","variant","Home","isMovieSelected","movieOTW","userOTW","noteOTW","previousMovies","currentPool","upcomingMovies","isLoading","movieOTWData","watchOTW","movies","watchedMovies","note","style","textAlign","map","i","suggestion","Login","recoverPassword","require","config","App","path","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bf9244c0.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport '../css/SuggestionForm.css';\r\n\r\nclass SuggestionForm extends React.Component {\r\n    state = {\r\n        movieSuggestion: '', \r\n        user: '', \r\n        movieNote: '' \r\n    };\r\n\r\n    submitSuggestion = () => {\r\n        if (this.state.movieSuggestion.length === 0) {\r\n            window.alert(\"Movie name cannot be empty.\");\r\n            return;\r\n        }\r\n\r\n        if (this.state.user.length === 0) {\r\n            window.alert(\"User not selected.\");\r\n            return;\r\n        }\r\n\r\n        const movie = this.state.movieSuggestion;\r\n        const user = this.state.user;\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: \"http://localhost:9000/SuggestMovie\",\r\n            data: {\r\n                movie: movie, \r\n                name: user,\r\n                movieNote: this.state.movieNote\r\n            }\r\n        })\r\n        .then((response) => {\r\n        if (response.data.success) {\r\n            this.setState({movieSuggestion:'', movieNote:''});\r\n            window.alert(\"Successfully added \" + response.data.val + \".\\n\" + \"Movie ID: \" + response.data.movieIdx);\r\n        } else {\r\n            // error occured\r\n            window.alert(response.data.val);\r\n        }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    updateMovie = (event) => {\r\n        this.setState({movieSuggestion: event.target.value})\r\n    } \r\n\r\n    updateUser = (event) => {\r\n        this.setState({user: event.target.value});\r\n    }\r\n\r\n    updateNote = (event) => {\r\n        this.setState({movieNote: event.target.value});\r\n    }\r\n\r\n    showReviewForm = () => {\r\n        window.alert(\"clicked\");\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1> Suggest a Movie </h1>\r\n\r\n                <label> Title: </label>\r\n                <input value={this.state.movieSuggestion} onChange={this.updateMovie} />\r\n                <br/>\r\n\r\n                <label> Suggested By: </label>\r\n                <select name=\"Name\" defaultValue=\"Choose here\" onChange={this.updateUser}>\r\n                <option value=\"Choose here\" disabled hidden>Choose here</option>\r\n                <option value={process.env.REACT_APP_NAME_1}>{process.env.REACT_APP_NAME_1}</option>\r\n                <option value={process.env.REACT_APP_NAME_2}>{process.env.REACT_APP_NAME_2}</option>\r\n                <option value={process.env.REACT_APP_NAME_3}>{process.env.REACT_APP_NAME_3}</option>\r\n                <option value={process.env.REACT_APP_NAME_4}>{process.env.REACT_APP_NAME_4}</option>\r\n                <option value={process.env.REACT_APP_NAME_5}>{process.env.REACT_APP_NAME_5}</option>\r\n                <option value={process.env.REACT_APP_NAME_6}>{process.env.REACT_APP_NAME_6}</option>\r\n                <option value={process.env.REACT_APP_NAME_7}>{process.env.REACT_APP_NAME_7}</option>\r\n                </select>\r\n                <br/>\r\n\r\n                <label> Teaser Note (optional): </label>\r\n                <textarea value={this.state.movieNote} onChange={this.updateNote} />\r\n                <br/>\r\n\r\n                <button onClick={this.submitSuggestion}> Suggest </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SuggestionForm;","import React from 'react';\r\nimport '../css/PreviousMovie.css';\r\n\r\nclass PreviousMovie extends React.Component {\r\n    state = {\r\n        displayReviewForm: false,\r\n        reviewSubmitted: false,\r\n        reviewScoreInput: -1.0,\r\n        finalReviewScore: -1.0,\r\n        user: ''\r\n    }\r\n\r\n    displayReviewForm = () => {\r\n        this.setState({displayReviewForm: true});\r\n    }\r\n\r\n    cancelReview = () => {\r\n        this.setState({displayReviewForm: false})\r\n    }\r\n\r\n    updateReviewScore = (event) => {\r\n        this.setState({reviewScore: event.target.value});\r\n    }\r\n\r\n    updateUser = (event) => {\r\n        this.setState({user: event.target.value});\r\n    }\r\n    \r\n    submitReview = () => {\r\n        try {\r\n            var val = parseFloat(this.state.reviewScore);\r\n            window.alert(val);\r\n        } catch {\r\n            window.alert(\"Error\");\r\n            return;\r\n        }\r\n\r\n        this.setState({reviewSubmitted: true})\r\n        //this.setState({})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\"> \r\n                <p> Movie title: {this.props.movieTitle} </p>\r\n                <p> Suggested by: {this.props.addedBy} </p>\r\n                <p> Watched on: {this.props.dateWatched} </p>\r\n                <p> Teaser Note: {this.props.teaser} </p>\r\n                {/*\r\n                <p> Average Review: {this.props.avgReview} </p>\r\n                <p> Review Count: {this.props.reviewCount} </p>\r\n                <button onClick={this.displayReviewForm}> Make Review </button>\r\n                {this.state.displayReviewForm ? \r\n                   <div> \r\n                        <label> Score (1.00-10.00): </label>\r\n                        <input onChange={this.updateReviewScore} />\r\n\r\n                        <label> Reviewed By: </label>\r\n                        <select name=\"Name\" defaultValue=\"Choose here\" onChange={this.updateUser}>\r\n                        <option value=\"Choose here\" disabled hidden>Choose here</option>\r\n                        <option value=\"\">Felix</option>\r\n                        <option value=\"\">Hector</option>\r\n                        <option value=\"\">Jason</option>\r\n                        <option value=\"\">Jesse</option>\r\n                        <option value=\"\">Jorge</option>\r\n                        <option value=\"\">Juan</option>\r\n                        <option value=\"\">Octavio</option>\r\n                        </select>\r\n\r\n                        <button onClick={this.submitReview}> Submit </button> \r\n                        <button onClick={this.cancelReview}> Cancel </button>\r\n\r\n                        {this.state.reviewSubmitted ? <p> Review score of {this.state.finalReviewScore} submitted </p> : null}\r\n                   </div>\r\n                   : \r\n                   null \r\n                }\r\n                */\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviousMovie;","import React from 'react';\r\nimport { Navbar, NavDropdown, Nav, Button, Form, FormControl } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nclass CustomNavbar extends React.Component {\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#home\">Movie Of The Week</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"#home\">Leaderboard</Nav.Link>\r\n                    <Nav.Link href=\"#home\">Suggestions</Nav.Link>\r\n\r\n                    </Nav>\r\n                    <Form inline>\r\n                    <LinkContainer to=\"/login\">\r\n                        <Button color=\"blue\" variant=\"secondary\">\r\n                            Login\r\n                        </Button>\r\n                    </LinkContainer>\r\n                    </Form>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomNavbar;","import React from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport SuggestionForm from './components/SuggestionForm';\r\nimport PreviousMovie from './components/PreviousMovie';\r\nimport CustomNavbar from './components/CustomNavbar';\r\n\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isMovieSelected: false,\r\n    movieOTW: '',\r\n    userOTW: '', \r\n    noteOTW: '',\r\n    previousMovies: [],\r\n    currentPool: [],\r\n    upcomingMovies: [],\r\n    isLoading: true\r\n  }\r\n  \r\n  componentDidMount () {\r\n    // retrieve watched movies\r\n    axios({\r\n      method: 'get', \r\n      url: \"http://localhost:9000/HomeData\"\r\n    })\r\n\r\n    .then((response) => {\r\n      // get motw data\r\n      let movieOTWData = response.data.movieOTW;\r\n\r\n      // display motw if it's not blank\r\n      let isMovieSelected = (movieOTWData.watchOTW.length === 0) ? false : true;\r\n      \r\n      let movies = response.data.watchedMovies;\r\n      this.setState({\r\n        previousMovies: movies, \r\n        isMovieSelected: isMovieSelected,\r\n        movieOTW: movieOTWData.watchOTW,\r\n        userOTW: movieOTWData.addedBy, \r\n        noteOTW: movieOTWData.note, \r\n        upcomingMovies: response.data.upcomingMovies, \r\n        currentPool: response.data.currentPool,\r\n        isLoading: false\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      window.alert(\"Unable to load home data: \" + error);\r\n    })\r\n    this.setState({isLoading: false});\r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return <h1 style={{textAlign: 'center'}}> Loading... </h1>\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <CustomNavbar />\r\n        <h1> Selected Movie </h1>\r\n        {this.state.isMovieSelected ? \r\n            <div> \r\n              <p> Movie of the week is {this.state.movieOTW} </p>\r\n              <p> Added by {this.state.userOTW} </p>\r\n              {this.state.noteOTW.length === 0 ? null : <p> Teaser: {this.state.noteOTW} </p>}\r\n              <p> Watch it <a href=\"https://zoom.us/j/97457711739?pwd=Z2x3K3l5OUVTQVJmNDBkRGNqWHdjZz09\r\n\">here</a></p> \r\n            </div> \r\n            : \r\n            <p> No movie selected yet for this week.</p>\r\n        }\r\n\r\n        <h1> Current Pool </h1>\r\n        {this.state.currentPool.map((user, i) => (\r\n          <p key={i}> {user.suggestion} - {user.name} </p>\r\n        ))}\r\n\r\n        <SuggestionForm />\r\n\r\n        <br />\r\n        <h1> Upcoming Movies </h1>\r\n        {this.state.upcomingMovies.map((movie, i) => (\r\n          <div>\r\n          <p key={i}> {movie.name} - {movie.user} </p> \r\n          </div>\r\n        ))}\r\n\r\n\r\n        <h1> Movies Watched so Far </h1>\r\n        {this.state.previousMovies.map((movie, i) => (\r\n          <PreviousMovie key={i} movieTitle={movie.name} teaser={movie.teaser} addedBy={movie.addedBy} dateWatched={movie.dateWatched} />\r\n        ))}\r\n\r\n        <label> Filtered by </label>\r\n        <select name=\"Name\" defaultValue=\"Choose here\" onChange={this.updateUser}>\r\n        <option value={\"Date-Descending\"}>Date-Descending</option>\r\n        </select>\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        recoverPassword: false\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            {this.state.recoverPassword \r\n            ? \r\n                <div>\r\n                    <h1> Password Recovery </h1>\r\n                    <label> Enter email to recover account: </label>\r\n                    <input onChange={this.updateMovie} />\r\n                    <button onClick={() => {this.setState({recoverPassword: false})}}> Back to Login </button>\r\n                </div>\r\n\r\n            :\r\n                <div>\r\n                    <h1> Login </h1>\r\n                    <label> email or username: </label>\r\n                    <input onChange={this.updateMovie} />\r\n                    <br/>\r\n\r\n                    <label> password: </label>\r\n                    <input onChange={this.updateMovie} />\r\n                    <br/>\r\n\r\n                    <button onClick={() => {window.alert(\"hi\");}}> Login </button>            \r\n                    <button onClick={() => {this.setState({recoverPassword: true})}}> Forgot Username/Password </button>\r\n                </div>\r\n            }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport './App.css';\r\nimport Home from './Home';\r\nimport Login from './pages/Login';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nrequire('dotenv').config()\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n\r\n  }\r\n  \r\n  componentDidMount () {\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n      <Router>\r\n        <Route path=\"/\" exact render={(props) => <Home />} />\r\n        <Route path=\"/login\" exact render={(props) => <Login />} />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}