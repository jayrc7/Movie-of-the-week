{"version":3,"sources":["components/SuggestionForm.js","components/PreviousMovie.js","App.js","reportWebVitals.js","index.js"],"names":["SuggestionForm","state","movieSuggestion","user","movieNote","submitSuggestion","length","movie","axios","method","url","data","name","then","response","success","setState","window","alert","val","catch","error","console","log","updateMovie","event","target","value","updateUser","updateNote","showReviewForm","this","onChange","defaultValue","disabled","hidden","process","onClick","React","Component","PreviousMovie","displayReviewForm","reviewSubmitted","reviewScoreInput","finalReviewScore","cancelReview","updateReviewScore","reviewScore","submitReview","parseFloat","className","props","movieTitle","addedBy","dateWatched","teaser","require","config","App","isMovieSelected","movieOTW","userOTW","noteOTW","previousMovies","isLoading","movieOTWData","note","movies","style","textAlign","href","map","i","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSA+FeA,G,kNA1FXC,MAAQ,CACJC,gBAAiB,GACjBC,KAAM,GACNC,UAAW,I,EAGfC,iBAAmB,WACf,GAA0C,IAAtC,EAAKJ,MAAMC,gBAAgBI,OAK/B,GAA+B,IAA3B,EAAKL,MAAME,KAAKG,OAApB,CAKA,IAAMC,EAAQ,EAAKN,MAAMC,gBACnBC,EAAO,EAAKF,MAAME,KACxBK,IAAM,CACFC,OAAQ,OACRC,IAAK,8CACLC,KAAM,CACFJ,MAAOA,EACPK,KAAMT,EACNC,UAAW,EAAKH,MAAMG,aAG7BS,MAAK,SAACC,GACHA,EAASH,KAAKI,SACd,EAAKC,SAAS,CAACd,gBAAgB,GAAIE,UAAU,KAC7Ca,OAAOC,MAAM,sBAAwBJ,EAASH,KAAKQ,IAAM,MAGzDF,OAAOC,MAAMJ,EAASH,KAAKQ,QAG9BC,OAAM,SAACC,GACJC,QAAQC,IAAIF,WAzBhBJ,OAAOC,MAAM,2BALbD,OAAOC,MAAM,gC,EAkCjBM,YAAc,SAACC,GACX,EAAKT,SAAS,CAACd,gBAAiBuB,EAAMC,OAAOC,S,EAGjDC,WAAa,SAACH,GACV,EAAKT,SAAS,CAACb,KAAMsB,EAAMC,OAAOC,S,EAGtCE,WAAa,SAACJ,GACV,EAAKT,SAAS,CAACZ,UAAWqB,EAAMC,OAAOC,S,EAG3CG,eAAiB,WACbb,OAAOC,MAAM,Y,uDAIb,OACI,gCACI,mDAEA,6CACA,uBAAOS,MAAOI,KAAK9B,MAAMC,gBAAiB8B,SAAUD,KAAKP,cACzD,uBAEA,oDACA,yBAAQZ,KAAK,OAAOqB,aAAa,cAAcD,SAAUD,KAAKH,WAA9D,UACA,wBAAQD,MAAM,cAAcO,UAAQ,EAACC,QAAM,EAA3C,yBACA,wBAAQR,MAAOS,QAAf,SAA8CA,UAC9C,wBAAQT,MAAOS,SAAf,SAA8CA,WAC9C,wBAAQT,MAAOS,QAAf,SAA8CA,UAC9C,wBAAQT,MAAOS,QAAf,SAA8CA,UAC9C,wBAAQT,MAAOS,QAAf,SAA8CA,UAC9C,wBAAQT,MAAOS,OAAf,SAA8CA,SAC9C,wBAAQT,MAAOS,UAAf,SAA8CA,eAE9C,uBAEA,8DACA,0BAAUT,MAAOI,KAAK9B,MAAMG,UAAW4B,SAAUD,KAAKF,aACtD,uBAEA,wBAAQQ,QAASN,KAAK1B,iBAAtB,8B,GArFaiC,IAAMC,YCgFpBC,G,kNAhFXvC,MAAQ,CACJwC,mBAAmB,EACnBC,iBAAiB,EACjBC,kBAAmB,EACnBC,kBAAmB,EACnBzC,KAAM,I,EAGVsC,kBAAoB,WAChB,EAAKzB,SAAS,CAACyB,mBAAmB,K,EAGtCI,aAAe,WACX,EAAK7B,SAAS,CAACyB,mBAAmB,K,EAGtCK,kBAAoB,SAACrB,GACjB,EAAKT,SAAS,CAAC+B,YAAatB,EAAMC,OAAOC,S,EAG7CC,WAAa,SAACH,GACV,EAAKT,SAAS,CAACb,KAAMsB,EAAMC,OAAOC,S,EAGtCqB,aAAe,WACX,IACI,IAAI7B,EAAM8B,WAAW,EAAKhD,MAAM8C,aAChC9B,OAAOC,MAAMC,GACf,SAEE,YADAF,OAAOC,MAAM,SAIjB,EAAKF,SAAS,CAAC0B,iBAAiB,K,uDAKhC,OACI,sBAAKQ,UAAU,YAAf,UACI,+CAAkBnB,KAAKoB,MAAMC,WAA7B,OACA,gDAAmBrB,KAAKoB,MAAME,QAA9B,OACA,8CAAiBtB,KAAKoB,MAAMG,YAA5B,OACA,+CAAkBvB,KAAKoB,MAAMI,OAA7B,c,GA5CYjB,IAAMC,YCElCiB,EAAQ,IAAUC,S,IAuEHC,E,4MApEbzD,MAAQ,CACN0D,iBAAiB,EACjBC,SAAU,GACVC,QAAS,GACTC,QAAS,GACTC,eAAgB,GAChBC,WAAW,G,kEAGS,IAAD,OAEnBxD,IAAM,CACJC,OAAQ,MACRC,IAAK,4CAENG,MAAK,SAACC,GACLG,OAAOC,MAAMJ,GACbQ,QAAQC,IAAIT,GAEZ,IAAImD,EAAenD,EAASH,KAAKiD,SACjCtC,QAAQC,IAAI0C,GACZ3C,QAAQC,IAAI0C,EAAaL,UACzB,IAAIA,EAAWK,EAAaL,SACxBC,EAAUI,EAAaZ,QACvBE,EAASU,EAAaC,KAGtBP,EAAoD,IAAjCM,EAAaL,SAAStD,OAEzC6D,EAASrD,EAASH,KAAKwD,OAC3B,EAAKnD,SAAS,CAAC+C,eAAgBI,EAAQH,WAAW,EAAOL,gBAAiBA,EAAiBC,SAAUA,EAAUC,QAASA,EAASC,QAASP,OAE3InC,OAAM,SAACC,GACNJ,OAAOC,MAAM,mCAAqCG,Q,+BAMpD,OAAIU,KAAK9B,MAAM+D,UACN,oBAAII,MAAO,CAACC,UAAW,UAAvB,0BAIP,sBAAKnB,UAAU,MAAf,UACE,6DACCnB,KAAK9B,MAAM0D,gBACR,gCACE,wDAA2B5B,KAAK9B,MAAM2D,SAAtC,OACA,4CAAe7B,KAAK9B,MAAM4D,QAA1B,OAC+B,IAA9B9B,KAAK9B,MAAM6D,QAAQxD,OAAe,KAAO,0CAAayB,KAAK9B,MAAM6D,QAAxB,OAC1C,2CAAa,mBAAGQ,KAAK,IAAR,wBAGf,sEAGJ,cAAC,EAAD,IAEA,yDACCvC,KAAK9B,MAAM8D,eAAeQ,KAAI,SAAChE,EAAOiE,GAAR,OAC7B,cAAC,EAAD,CAAuBpB,WAAY7C,EAAMK,KAAM2C,OAAQhD,EAAMgD,OAAQF,QAAS9C,EAAM8C,QAASC,YAAa/C,EAAM+C,aAA5FkB,a,GA9DZlC,IAAMC,WCKTkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9D,MAAK,YAAkD,IAA/C+D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3e34dafb.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport '../css/SuggestionForm.css';\r\n\r\nclass SuggestionForm extends React.Component {\r\n    state = {\r\n        movieSuggestion: '', \r\n        user: '', \r\n        movieNote: '' \r\n    };\r\n\r\n    submitSuggestion = () => {\r\n        if (this.state.movieSuggestion.length === 0) {\r\n        window.alert(\"Movie name cannot be empty.\");\r\n        return;\r\n        }\r\n\r\n        if (this.state.user.length === 0) {\r\n        window.alert(\"User not selected.\");\r\n        return;\r\n        }\r\n\r\n        const movie = this.state.movieSuggestion;\r\n        const user = this.state.user;\r\n        axios({\r\n            method: 'post',\r\n            url: 'https://movieotw.herokuapp.com/SuggestMovie',\r\n            data: {\r\n                movie: movie, \r\n                name: user,\r\n                movieNote: this.state.movieNote\r\n            }\r\n        })\r\n        .then((response) => {\r\n        if (response.data.success) {\r\n            this.setState({movieSuggestion:'', movieNote:''});\r\n            window.alert(\"Successfully added \" + response.data.val + \".\");\r\n        } else {\r\n            // error occured\r\n            window.alert(response.data.val);\r\n        }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    updateMovie = (event) => {\r\n        this.setState({movieSuggestion: event.target.value})\r\n    } \r\n\r\n    updateUser = (event) => {\r\n        this.setState({user: event.target.value});\r\n    }\r\n\r\n    updateNote = (event) => {\r\n        this.setState({movieNote: event.target.value});\r\n    }\r\n\r\n    showReviewForm = () => {\r\n        window.alert(\"clicked\");\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1> Suggest a Movie </h1>\r\n\r\n                <label> Title: </label>\r\n                <input value={this.state.movieSuggestion} onChange={this.updateMovie} />\r\n                <br/>\r\n\r\n                <label> Suggested By: </label>\r\n                <select name=\"Name\" defaultValue=\"Choose here\" onChange={this.updateUser}>\r\n                <option value=\"Choose here\" disabled hidden>Choose here</option>\r\n                <option value={process.env.REACT_APP_NAME_1}>{process.env.REACT_APP_NAME_1}</option>\r\n                <option value={process.env.REACT_APP_NAME_2}>{process.env.REACT_APP_NAME_2}</option>\r\n                <option value={process.env.REACT_APP_NAME_3}>{process.env.REACT_APP_NAME_3}</option>\r\n                <option value={process.env.REACT_APP_NAME_4}>{process.env.REACT_APP_NAME_4}</option>\r\n                <option value={process.env.REACT_APP_NAME_5}>{process.env.REACT_APP_NAME_5}</option>\r\n                <option value={process.env.REACT_APP_NAME_6}>{process.env.REACT_APP_NAME_6}</option>\r\n                <option value={process.env.REACT_APP_NAME_7}>{process.env.REACT_APP_NAME_7}</option>\r\n                </select>\r\n                <br/>\r\n\r\n                <label> Teaser Note (optional): </label>\r\n                <textarea value={this.state.movieNote} onChange={this.updateNote} />\r\n                <br/>\r\n\r\n                <button onClick={this.submitSuggestion}> Suggest </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SuggestionForm;","import React from 'react';\r\nimport '../css/PreviousMovie.css';\r\n\r\nclass PreviousMovie extends React.Component {\r\n    state = {\r\n        displayReviewForm: false,\r\n        reviewSubmitted: false,\r\n        reviewScoreInput: -1.0,\r\n        finalReviewScore: -1.0,\r\n        user: ''\r\n    }\r\n\r\n    displayReviewForm = () => {\r\n        this.setState({displayReviewForm: true});\r\n    }\r\n\r\n    cancelReview = () => {\r\n        this.setState({displayReviewForm: false})\r\n    }\r\n\r\n    updateReviewScore = (event) => {\r\n        this.setState({reviewScore: event.target.value});\r\n    }\r\n\r\n    updateUser = (event) => {\r\n        this.setState({user: event.target.value});\r\n    }\r\n    \r\n    submitReview = () => {\r\n        try {\r\n            var val = parseFloat(this.state.reviewScore);\r\n            window.alert(val);\r\n        } catch {\r\n            window.alert(\"Error\");\r\n            return;\r\n        }\r\n\r\n        this.setState({reviewSubmitted: true})\r\n        //this.setState({})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\"> \r\n                <p> Movie title: {this.props.movieTitle} </p>\r\n                <p> Suggested by: {this.props.addedBy} </p>\r\n                <p> Watched on: {this.props.dateWatched} </p>\r\n                <p> Teaser Note: {this.props.teaser} </p>\r\n                {/*\r\n                <p> Average Review: {this.props.avgReview} </p>\r\n                <p> Review Count: {this.props.reviewCount} </p>\r\n                <button onClick={this.displayReviewForm}> Make Review </button>\r\n                {this.state.displayReviewForm ? \r\n                   <div> \r\n                        <label> Score (1.00-10.00): </label>\r\n                        <input onChange={this.updateReviewScore} />\r\n\r\n                        <label> Reviewed By: </label>\r\n                        <select name=\"Name\" defaultValue=\"Choose here\" onChange={this.updateUser}>\r\n                        <option value=\"Choose here\" disabled hidden>Choose here</option>\r\n                        <option value=\"\">Felix</option>\r\n                        <option value=\"\">Hector</option>\r\n                        <option value=\"\">Jason</option>\r\n                        <option value=\"\">Jesse</option>\r\n                        <option value=\"\">Jorge</option>\r\n                        <option value=\"\">Juan</option>\r\n                        <option value=\"\">Octavio</option>\r\n                        </select>\r\n\r\n                        <button onClick={this.submitReview}> Submit </button> \r\n                        <button onClick={this.cancelReview}> Cancel </button>\r\n\r\n                        {this.state.reviewSubmitted ? <p> Review score of {this.state.finalReviewScore} submitted </p> : null}\r\n                   </div>\r\n                   : \r\n                   null \r\n                }\r\n                */\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviousMovie;","import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport SuggestionForm from './components/SuggestionForm';\nimport PreviousMovie from './components/PreviousMovie';\nrequire('dotenv').config()\n\nclass App extends React.Component {\n  state = {\n    isMovieSelected: false,\n    movieOTW: '',\n    userOTW: '', \n    noteOTW: '',\n    previousMovies: [],\n    isLoading: true,\n  }\n  \n  componentDidMount () {\n    // retrieve watched movies\n    axios({\n      method: 'get', \n      url: 'https://movieotw.herokuapp.com/HomeData'\n    })\n    .then((response) => {\n      window.alert(response);\n      console.log(response);\n      // get motw data\n      let movieOTWData = response.data.movieOTW;\n      console.log(movieOTWData);\n      console.log(movieOTWData.movieOTW);\n      let movieOTW = movieOTWData.movieOTW;\n      let userOTW = movieOTWData.addedBy;\n      let teaser = movieOTWData.note;\n\n      // display motw if it's not blank\n      let isMovieSelected = (movieOTWData.movieOTW.length === 0) ? false : true;\n      \n      let movies = response.data.movies;\n      this.setState({previousMovies: movies, isLoading: false, isMovieSelected: isMovieSelected, movieOTW: movieOTW, userOTW: userOTW, noteOTW: teaser});\n    })\n    .catch((error) => {\n      window.alert(\"Unable to load previous movies: \" + error);\n    })\n  }\n\n\n  render() {\n    if (this.state.isLoading) {\n      return <h1 style={{textAlign: 'center'}}> Loading... </h1>\n    }\n\n    return (\n      <div className=\"App\">\n        <h1> Movie Of The Week (In Dev)</h1>\n        {this.state.isMovieSelected ? \n            <div> \n              <p> Movie of the week is: {this.state.movieOTW} </p>\n              <p> Added by: {this.state.userOTW} </p>\n              {this.state.noteOTW.length === 0 ? null : <p> Teaser: {this.state.noteOTW} </p>}\n              <p> Watch it <a href=\"#\">Here</a></p> \n            </div> \n            : \n            <p> No movie selected yet for this week.</p>\n        }\n\n        <SuggestionForm />\n\n        <h1> Movies Watched so Far </h1>\n        {this.state.previousMovies.map((movie, i) => (\n          <PreviousMovie key={i} movieTitle={movie.name} teaser={movie.teaser} addedBy={movie.addedBy} dateWatched={movie.dateWatched} />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}